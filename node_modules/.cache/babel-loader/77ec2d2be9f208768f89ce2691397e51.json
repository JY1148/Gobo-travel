{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  loading: true,\n  error: null,\n  data: null\n};\nexport const getProductDetail = createAsyncThunk(\"productDetail/getPoductDetail\", async (touristRouteId, thunkAPI) => {\n  thunkAPI.dispatch(productDetailSlice.actions.fetchStart());\n\n  try {\n    const {\n      data\n    } = await axios.get(`http://123.56.149.216:8080/api/touristRoutes/${touristRouteId}`);\n    thunkAPI.dispatch(productDetailSlice.actions.fetchSuccess(data));\n  } catch (error) {\n    if (error instanceof Error) {\n      thunkAPI.dispatch(productDetailSlice.actions.fetchFail(error.message));\n    }\n  }\n});\nexport const productDetailSlice = createSlice({\n  name: \"productDetail\",\n  initialState,\n  reducers: {\n    fetchStart: state => {\n      //return {...state, loading:true};\n      state.loading = true;\n    },\n    fetchSuccess: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n      state.error = null;\n    },\n    fetchFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/jinzhouyan/Desktop/react-travel/src/redux/productDetail/slice.ts"],"names":["createSlice","createAsyncThunk","initialState","loading","error","data","getProductDetail","touristRouteId","thunkAPI","dispatch","productDetailSlice","actions","fetchStart","axios","get","fetchSuccess","Error","fetchFail","message","name","reducers","state","action","payload"],"mappings":"AAAA,SAASA,WAAT,EAAqCC,gBAArC,QAA6D,kBAA7D;AAQA,MAAMC,YAAgC,GAAG;AACrCC,EAAAA,OAAO,EAAE,IAD4B;AAErCC,EAAAA,KAAK,EAAE,IAF8B;AAGrCC,EAAAA,IAAI,EAAE;AAH+B,CAAzC;AAMA,OAAO,MAAMC,gBAAgB,GAAGL,gBAAgB,CAC5C,+BAD4C,EAE5C,OAAOM,cAAP,EAA+BC,QAA/B,KAA4C;AACxCA,EAAAA,QAAQ,CAACC,QAAT,CAAkBC,kBAAkB,CAACC,OAAnB,CAA2BC,UAA3B,EAAlB;;AACA,MAAI;AACF,UAAM;AAAEP,MAAAA;AAAF,QAAW,MAAMQ,KAAK,CAACC,GAAN,CACpB,gDAA+CP,cAAe,EAD1C,CAAvB;AAGAC,IAAAA,QAAQ,CAACC,QAAT,CAAkBC,kBAAkB,CAACC,OAAnB,CAA2BI,YAA3B,CAAwCV,IAAxC,CAAlB;AACD,GALD,CAKE,OAAOD,KAAP,EAAc;AACd,QAAIA,KAAK,YAAYY,KAArB,EAA4B;AAC1BR,MAAAA,QAAQ,CAACC,QAAT,CAAkBC,kBAAkB,CAACC,OAAnB,CAA2BM,SAA3B,CAAqCb,KAAK,CAACc,OAA3C,CAAlB;AACD;AACF;AACJ,CAd2C,CAAzC;AAiBP,OAAO,MAAMR,kBAAkB,GAAGV,WAAW,CAAC;AAC1CmB,EAAAA,IAAI,EAAE,eADoC;AAE1CjB,EAAAA,YAF0C;AAG1CkB,EAAAA,QAAQ,EAAE;AACNR,IAAAA,UAAU,EAAGS,KAAD,IAAU;AAClB;AACAA,MAAAA,KAAK,CAAClB,OAAN,GAAgB,IAAhB;AACH,KAJK;AAKNY,IAAAA,YAAY,EAAE,CAACM,KAAD,EAAQC,MAAR,KAAkB;AAC5BD,MAAAA,KAAK,CAAClB,OAAN,GAAgB,KAAhB;AACAkB,MAAAA,KAAK,CAAChB,IAAN,GAAaiB,MAAM,CAACC,OAApB;AACAF,MAAAA,KAAK,CAACjB,KAAN,GAAc,IAAd;AACH,KATK;AAUNa,IAAAA,SAAS,EAAE,CAACI,KAAD,EAAQC,MAAR,KAAgD;AACvDD,MAAAA,KAAK,CAAClB,OAAN,GAAgB,KAAhB;AACAkB,MAAAA,KAAK,CAACjB,KAAN,GAAckB,MAAM,CAACC,OAArB;AACH;AAbK;AAHgC,CAAD,CAAtC","sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from \"@reduxjs/toolkit\";\n\ninterface ProductDetailState{\n    loading: boolean;\n    error: string | null;\n    data: any;\n}\n\nconst initialState: ProductDetailState = {\n    loading: true,\n    error: null,\n    data: null,\n    \n}\nexport const getProductDetail = createAsyncThunk(\n    \"productDetail/getPoductDetail\",\n    async (touristRouteId: string, thunkAPI) => {\n        thunkAPI.dispatch(productDetailSlice.actions.fetchStart())\n        try {\n          const { data } = await axios.get(\n            `http://123.56.149.216:8080/api/touristRoutes/${touristRouteId}`\n          );\n          thunkAPI.dispatch(productDetailSlice.actions.fetchSuccess(data))\n        } catch (error) {\n          if (error instanceof Error) {\n            thunkAPI.dispatch(productDetailSlice.actions.fetchFail(error.message))\n          }\n        }\n    }\n)\n\nexport const productDetailSlice = createSlice({\n    name: \"productDetail\",\n    initialState,\n    reducers: {\n        fetchStart: (state) =>{\n            //return {...state, loading:true};\n            state.loading = true;\n        },\n        fetchSuccess: (state, action) =>{\n            state.loading = false;\n            state.data = action.payload;\n            state.error = null;\n        },\n        fetchFail: (state, action: PayloadAction<string | null>) =>{\n            state.loading = false;\n            state.error = action.payload\n        }\n    }\n})"]},"metadata":{},"sourceType":"module"}