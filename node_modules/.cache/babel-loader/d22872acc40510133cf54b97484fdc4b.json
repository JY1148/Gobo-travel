{"ast":null,"code":"import _toConsumableArray from\"/Users/jinzhouyan/Desktop/react-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/jinzhouyan/Desktop/react-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import i18n from\"i18next\";import{CHANGE_LANGUAGE,ADD_LANGUAGE}from\"./languageAction\";var defaultState={language:\"zh\",languageList:[{name:\"中文\",code:\"zh\"},{name:\"English\",code:\"en\"}]};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ADD_LANGUAGE:return _objectSpread(_objectSpread({},state),{},{languageList:[].concat(_toConsumableArray(state.languageList),[action.payload])});case CHANGE_LANGUAGE:i18n.changeLanguage(action.payload);return _objectSpread(_objectSpread({},state),{},{language:action.payload});default:return state;}});","map":{"version":3,"sources":["/Users/jinzhouyan/Desktop/react-travel/src/redux/language/LanguageReducer.ts"],"names":["i18n","CHANGE_LANGUAGE","ADD_LANGUAGE","defaultState","language","languageList","name","code","state","action","type","payload","changeLanguage"],"mappings":"iUAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CACA,OAASC,eAAT,CAA0BC,YAA1B,KAAmE,kBAAnE,CAOA,GAAMC,CAAAA,YAA2B,CAAG,CAChCC,QAAQ,CAAC,IADuB,CAEhCC,YAAY,CAAE,CACV,CAAEC,IAAI,CAAE,IAAR,CAAcC,IAAI,CAAE,IAApB,CADU,CAEV,CAAED,IAAI,CAAE,SAAR,CAAmBC,IAAI,CAAE,IAAzB,CAFU,CAFkB,CAApC,CAQA,eAAe,UAAuD,IAAtDC,CAAAA,KAAsD,2DAA9CL,YAA8C,IAAhCM,CAAAA,MAAgC,2CAClE,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKR,CAAAA,YAAL,CACI,sCAAWM,KAAX,MAAkBH,YAAY,8BAAMG,KAAK,CAACH,YAAZ,GAA0BI,MAAM,CAACE,OAAjC,EAA9B,GACJ,IAAKV,CAAAA,eAAL,CACID,IAAI,CAACY,cAAL,CAAoBH,MAAM,CAACE,OAA3B,EACA,sCAAWH,KAAX,MAAkBJ,QAAQ,CAAEK,MAAM,CAACE,OAAnC,GACJ,QACI,MAAOH,CAAAA,KAAP,CAPR,CASH,CAVD","sourcesContent":["import i18n from \"i18next\";\nimport { CHANGE_LANGUAGE, ADD_LANGUAGE, LanguageActionTypes } from \"./languageAction\";\n\nexport interface LanguageState{\n    language: \"en\" | \"zh\",\n    languageList: {name:string, code:string}[]\n}\n\nconst defaultState: LanguageState = {\n    language:\"zh\",\n    languageList: [\n        { name: \"中文\", code: \"zh\" },\n        { name: \"English\", code: \"en\" },\n    ],\n};\n\nexport default (state = defaultState, action: LanguageActionTypes) => {\n    switch(action.type){\n        case ADD_LANGUAGE:\n            return {...state, languageList: [...state.languageList, action.payload]};\n        case CHANGE_LANGUAGE:\n            i18n.changeLanguage(action.payload);\n            return {...state, language: action.payload};\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}