{"ast":null,"code":"import _toConsumableArray from\"/Users/jinzhouyan/Desktop/react-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import languageReducer from\"./language/LanguageReducer\";import recommendProductsReducer from\"./recommendProducts/recommendProductsReducer\";import{actionLog}from\"./middlewares/actionLog\";import{productDetailSlice}from\"./productDetail/slice\";import{combineReducers,configureStore}from\"@reduxjs/toolkit\";import{productSearchSlice}from\"./productSearch/slice\";import{UserSlice}from\"./user/slice\";import{shoppingCartSlice}from\"./shoppingCart/slice\";import{persistStore,persistReducer}from\"redux-persist\";import storage from\"redux-persist/lib/storage\";import{orderSlice}from\"./order/slice\";var persistConfig={key:\"root\",storage:storage,whitelist:[\"user\"]};var rootReducer=combineReducers({language:languageReducer,recommendProducts:recommendProductsReducer,productDetail:productDetailSlice.reducer,productSearch:productSearchSlice.reducer,user:UserSlice.reducer,shoppingCart:shoppingCartSlice.reducer,order:orderSlice.reducer});var persistedReducer=persistReducer(persistConfig,rootReducer);// const store = createStore(rootReducer, applyMiddleware(thunk, actionLog));\nvar store=configureStore({reducer:persistedReducer,middleware:function middleware(getDefaultMiddleware){return[].concat(_toConsumableArray(getDefaultMiddleware()),[actionLog]);},devTools:true});var persistor=persistStore(store);export default{store:store,persistor:persistor};","map":{"version":3,"sources":["/Users/jinzhouyan/Desktop/react-travel/src/redux/store.ts"],"names":["languageReducer","recommendProductsReducer","actionLog","productDetailSlice","combineReducers","configureStore","productSearchSlice","UserSlice","shoppingCartSlice","persistStore","persistReducer","storage","orderSlice","persistConfig","key","whitelist","rootReducer","language","recommendProducts","productDetail","reducer","productSearch","user","shoppingCart","order","persistedReducer","store","middleware","getDefaultMiddleware","devTools","persistor"],"mappings":"qKACA,MAAOA,CAAAA,eAAP,KAA4B,4BAA5B,CACA,MAAOC,CAAAA,wBAAP,KAAqC,8CAArC,CAEA,OAASC,SAAT,KAA0B,yBAA1B,CACA,OAASC,kBAAT,KAAmC,uBAAnC,CACA,OAASC,eAAT,CAA0BC,cAA1B,KAAgD,kBAAhD,CACA,OAASC,kBAAT,KAAmC,uBAAnC,CACA,OAASC,SAAT,KAA0B,cAA1B,CACA,OAASC,iBAAT,KAAkC,sBAAlC,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,eAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,OAASC,UAAT,KAA2B,eAA3B,CAEA,GAAMC,CAAAA,aAAa,CAAE,CACjBC,GAAG,CAAE,MADY,CAEjBH,OAAO,CAAPA,OAFiB,CAGjBI,SAAS,CAAE,CAAC,MAAD,CAHM,CAArB,CAMA,GAAMC,CAAAA,WAAW,CAAGZ,eAAe,CAAC,CAChCa,QAAQ,CAAEjB,eADsB,CAEhCkB,iBAAiB,CAACjB,wBAFc,CAGhCkB,aAAa,CAAEhB,kBAAkB,CAACiB,OAHF,CAIhCC,aAAa,CAAEf,kBAAkB,CAACc,OAJF,CAKhCE,IAAI,CAAEf,SAAS,CAACa,OALgB,CAMhCG,YAAY,CAAEf,iBAAiB,CAACY,OANA,CAOhCI,KAAK,CAAEZ,UAAU,CAACQ,OAPc,CAAD,CAAnC,CAUA,GAAMK,CAAAA,gBAAgB,CAAGf,cAAc,CAACG,aAAD,CAAgBG,WAAhB,CAAvC,CAEA;AACA,GAAMU,CAAAA,KAAK,CAAGrB,cAAc,CAAC,CACzBe,OAAO,CAAEK,gBADgB,CAEzBE,UAAU,CAAE,oBAACC,oBAAD,qCAA8BA,oBAAoB,EAAlD,GAAsD1B,SAAtD,IAFa,CAGzB2B,QAAQ,CAAE,IAHe,CAAD,CAA5B,CAMA,GAAMC,CAAAA,SAAS,CAAGrB,YAAY,CAACiB,KAAD,CAA9B,CAKA,cAAe,CAAEA,KAAK,CAALA,KAAF,CAASI,SAAS,CAATA,SAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport languageReducer from \"./language/LanguageReducer\";\nimport recommendProductsReducer from \"./recommendProducts/recommendProductsReducer\";\nimport thunk from \"redux-thunk\";\nimport { actionLog } from \"./middlewares/actionLog\";\nimport { productDetailSlice } from \"./productDetail/slice\";\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { productSearchSlice } from \"./productSearch/slice\";\nimport { UserSlice } from \"./user/slice\";\nimport { shoppingCartSlice } from \"./shoppingCart/slice\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { orderSlice } from \"./order/slice\";\n\nconst persistConfig ={\n    key: \"root\",\n    storage,\n    whitelist: [\"user\"]\n}\n\nconst rootReducer = combineReducers({\n    language: languageReducer,\n    recommendProducts:recommendProductsReducer,\n    productDetail: productDetailSlice.reducer,\n    productSearch: productSearchSlice.reducer,\n    user: UserSlice.reducer,\n    shoppingCart: shoppingCartSlice.reducer,\n    order: orderSlice.reducer \n})\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n// const store = createStore(rootReducer, applyMiddleware(thunk, actionLog));\nconst store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) => [...getDefaultMiddleware(), actionLog],\n    devTools: true,\n})\n\nconst persistor = persistStore(store)\n\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport default { store, persistor };"]},"metadata":{},"sourceType":"module"}