{"ast":null,"code":"import languageReducer from \"./language/LanguageReducer\";\nimport recommendProductsReducer from \"./recommendProducts/recommendProductsReducer\";\nimport { actionLog } from \"./middlewares/actionLog\";\nimport { productDetailSlice } from \"./productDetail/slice\";\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { productSearchSlice } from \"./productSearch/slice\";\nimport { UserSlice } from \"./user/slice\";\nconst rootReducer = combineReducers({\n  language: languageReducer,\n  recommendProducts: recommendProductsReducer,\n  productDetail: productDetailSlice.reducer,\n  productSearch: productSearchSlice.reducer,\n  user: UserSlice.reducer\n}); // const store = createStore(rootReducer, applyMiddleware(thunk, actionLog));\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware(), actionLog],\n  devTools: true\n});\nexport default store;","map":{"version":3,"sources":["/Users/jinzhouyan/Desktop/react-travel/src/redux/store.ts"],"names":["languageReducer","recommendProductsReducer","actionLog","productDetailSlice","combineReducers","configureStore","productSearchSlice","UserSlice","rootReducer","language","recommendProducts","productDetail","reducer","productSearch","user","store","middleware","getDefaultMiddleware","devTools"],"mappings":"AACA,OAAOA,eAAP,MAA4B,4BAA5B;AACA,OAAOC,wBAAP,MAAqC,8CAArC;AAEA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,MAAMC,WAAW,GAAGJ,eAAe,CAAC;AAChCK,EAAAA,QAAQ,EAAET,eADsB;AAEhCU,EAAAA,iBAAiB,EAACT,wBAFc;AAGhCU,EAAAA,aAAa,EAAER,kBAAkB,CAACS,OAHF;AAIhCC,EAAAA,aAAa,EAAEP,kBAAkB,CAACM,OAJF;AAKhCE,EAAAA,IAAI,EAAEP,SAAS,CAACK;AALgB,CAAD,CAAnC,C,CAQA;;AACA,MAAMG,KAAK,GAAGV,cAAc,CAAC;AACzBO,EAAAA,OAAO,EAAEJ,WADgB;AAEzBQ,EAAAA,UAAU,EAAGC,oBAAD,IAA0B,CAAC,GAAGA,oBAAoB,EAAxB,EAA4Bf,SAA5B,CAFb;AAGzBgB,EAAAA,QAAQ,EAAE;AAHe,CAAD,CAA5B;AAOA,eAAeH,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport languageReducer from \"./language/LanguageReducer\";\nimport recommendProductsReducer from \"./recommendProducts/recommendProductsReducer\";\nimport thunk from \"redux-thunk\";\nimport { actionLog } from \"./middlewares/actionLog\";\nimport { productDetailSlice } from \"./productDetail/slice\";\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { productSearchSlice } from \"./productSearch/slice\";\nimport { UserSlice } from \"./user/slice\";\n\nconst rootReducer = combineReducers({\n    language: languageReducer,\n    recommendProducts:recommendProductsReducer,\n    productDetail: productDetailSlice.reducer,\n    productSearch: productSearchSlice.reducer,\n    user: UserSlice.reducer\n})\n\n// const store = createStore(rootReducer, applyMiddleware(thunk, actionLog));\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) => [...getDefaultMiddleware(), actionLog],\n    devTools: true,\n})\nexport type RootState = ReturnType<typeof store.getState>\n\nexport default store;"]},"metadata":{},"sourceType":"module"}