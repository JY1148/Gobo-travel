{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  loading: true,\n  error: null,\n  data: null\n};\nexport const productDetailSlice = createSlice({\n  name: \"productDetail\",\n  initialState,\n  reducers: {\n    fetchStart: state => {\n      //return {...state, loading:true};\n      state.loading = true;\n    },\n    fetchSuccess: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n      state.error = null;\n    },\n    fetchFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/jinzhouyan/Desktop/react-travel/src/redux/productDetail/slice.ts"],"names":["createSlice","initialState","loading","error","data","productDetailSlice","name","reducers","fetchStart","state","fetchSuccess","action","payload","fetchFail"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAQA,MAAMC,YAAgC,GAAG;AACrCC,EAAAA,OAAO,EAAE,IAD4B;AAErCC,EAAAA,KAAK,EAAE,IAF8B;AAGrCC,EAAAA,IAAI,EAAE;AAH+B,CAAzC;AAOA,OAAO,MAAMC,kBAAkB,GAAGL,WAAW,CAAC;AAC1CM,EAAAA,IAAI,EAAE,eADoC;AAE1CL,EAAAA,YAF0C;AAG1CM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAGC,KAAD,IAAU;AAClB;AACAA,MAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AACH,KAJK;AAKNQ,IAAAA,YAAY,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAkB;AAC5BF,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACL,IAAN,GAAaO,MAAM,CAACC,OAApB;AACAH,MAAAA,KAAK,CAACN,KAAN,GAAc,IAAd;AACH,KATK;AAUNU,IAAAA,SAAS,EAAE,CAACJ,KAAD,EAAQE,MAAR,KAAgD;AACvDF,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACN,KAAN,GAAcQ,MAAM,CAACC,OAArB;AACH;AAbK;AAHgC,CAAD,CAAtC","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface ProductDetailState{\n    loading: boolean;\n    error: string | null;\n    data: any;\n}\n\nconst initialState: ProductDetailState = {\n    loading: true,\n    error: null,\n    data: null,\n    \n}\n\nexport const productDetailSlice = createSlice({\n    name: \"productDetail\",\n    initialState,\n    reducers: {\n        fetchStart: (state) =>{\n            //return {...state, loading:true};\n            state.loading = true;\n        },\n        fetchSuccess: (state, action) =>{\n            state.loading = false;\n            state.data = action.payload;\n            state.error = null;\n        },\n        fetchFail: (state, action: PayloadAction<string | null>) =>{\n            state.loading = false;\n            state.error = action.payload\n        }\n    }\n})"]},"metadata":{},"sourceType":"module"}